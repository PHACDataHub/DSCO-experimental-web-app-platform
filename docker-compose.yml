version: "3.6"


services:
  db:
    image: postgres
    stop_signal: SIGTERM
    # https://docs.docker.com/compose/compose-file/compose-file-v2/#stop_grace_period
    stop_grace_period: 20s
    ports:
      - '5432'
    env_file:
      - ./database/database.env

  pgadmin:
    build:
      context: ./pgAdmin
      args:
        DB_NAME: db_name
        DB_USER: db_user
        DB_PASSWORD: password
        DB_HOST: db
        DB_PORT: 5432
    env_file: ./pgAdmin/pgAdmin.env
    ports:
      - "5433:5433"
    depends_on:
      - db

  core-api:
    build: ./core-api
    command: python manage.py runserver 0.0.0.0:8000
    env_file:
      - ./core-api/core-api.env
    environment:
      - DATABASE=postgres
    ports:
      - '8000:8000'
    volumes:
      - ./core-api:/code
    depends_on:
      - db
    links:
      - db:db

  graphql-postgraphile:
    build:
      context: ./graphql-postgraphile
    env_file:
      - ./graphql-postgraphile/graphql-postgraphile.env
    ports:
      - 8081:8081
    depends_on:
      - db
    restart: always
    command: [
      "--connection",
      "${DATABASE_URL}",
      "--port",
      "8081",
      "--schema",
      "public",
      "--append-plugins",
      "postgraphile-plugin-connection-filter",
      "--enhance-graphiql"
    ]

  graphql-hasura:
    image: hasura/graphql-engine:v2.20.0
    ports:
    - "8080:8080"
    env_file:
      ./graphql-hasura/graphql-hasura.env
    depends_on:
    - db

  frontend:
    stdin_open: true
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    volumes:
      - "./frontend/:/app"
    depends_on:
      - db

networks:
  default:
    name: nunet

volumes:
  # these are named volumes without a specific binding reference, which allows the services above to provide the binding reference
  postgres_data:
  static_volume:
  media_volume:
